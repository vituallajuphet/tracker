import axios from"axios";import{setTimeout}from"timers";const burl="http://localhost/smtp_api/",smtp={namespaced:!0,state:{smtp_data:[]},actions:{get_smtp:({commit:commit})=>new Promise((resolve,reject)=>{axios.get(burl+"smtp/getall").then(response=>{200==response.data.code?(commit("GET_SMTP",response.data),resolve(response.data)):reject({code:200,data:response.data})}).catch(err=>{reject({code:500})})}),get_all_smtp:({commit:commit},formdata)=>new Promise((resolve,reject)=>{axios.get(burl+"smtp/getall").then(response=>{200==response.data.code?(commit("GET_SMTP",response.data),resolve(response.data)):reject({code:200,data:response.data})}).catch(err=>{reject({code:500})})}),add_smtp:({commit:commit},formdata)=>new Promise((resolve,reject)=>{axios.post(burl+"smtp/savesmtp",formdata).then(response=>{200==response.data.code?(resolve(response.data),commit("GET_SMTP",response.data)):reject({code:200,data:response.data})}).catch(err=>{console.log(err),reject({code:500})})}),update_smtp:({commit:commit},formdata)=>new Promise((resolve,reject)=>{axios.post(burl+"smtp/updatesmtp",formdata).then(response=>{200==response.data.code?(resolve(response.data),commit("GET_SMTP",response.data)):reject({code:200,data:response.data})}).catch(err=>{console.log(err),reject({code:500})})})},getters:{getSMTP:state=>todayDate=>{let getDates=function(dd){let dt=new Date(dd);return dt.getFullYear()+"-"+(1==dt.getMonth().toString().length?"0"+(dt.getMonth()+1):dt.getMonth()+1)+"-"+(1==dt.getDate().toString().length?"0"+dt.getDate():dt.getDate())};return state.smtp_data.data.filter(smtp=>getDates(smtp.create_date)==todayDate)},getSpecificSmtp:state=>id=>state.smtp_data.data.find(smtp=>smtp.smpt_id==id),getfiltersmtp:state=>datas=>{let getDates=function(dd){let dt=new Date(dd);return dt.getFullYear()+"-"+(1==dt.getMonth().toString().length?"0"+(dt.getMonth()+1):dt.getMonth()+1)+"-"+(1==dt.getDate().toString().length?"0"+dt.getDate():dt.getDate())};return state.smtp_data.data.filter(smtp=>smtp.account_name.toLowerCase().indexOf(datas.stext.toLowerCase())>-1&&getDates(smtp.create_date)==datas.sdate)},getsmtpreport:state=>datas=>{let conDate=function(dd){let dt;return new Date(dd)},comparePdqa=(param1,param2)=>"Both"==param1||param1==param2,compareHosting=(par1,par2)=>"All"==par1||par1==par2,compareSMTP=(par1,par2)=>"All"==par1||("SMTP"==par1&&"phpmail"!=par2.toLowerCase()||"phpmail"==par1.toLowerCase()&&"phpmail"==par2.toLowerCase());return state.smtp_data.data.filter(smtp=>conDate(smtp.create_date)>=conDate(datas.from_date)&&conDate(smtp.create_date)<=conDate(datas.to_date)&&comparePdqa(datas.pdqaOption,smtp.PDQA)&&compareHosting(datas.hostname,smtp.hosting)&&compareSMTP(datas.mail_method,smtp.smtp_used))}},mutations:{GET_SMTP(state,dd){state.smtp_data=dd}}};export default smtp;
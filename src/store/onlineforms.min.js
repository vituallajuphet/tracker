import axios from"axios";import{setTimeout}from"timers";const burl="http://localhost/smtp_api/",onlineforms={namespaced:!0,state:{forms_data:[],loading:!1},actions:{get_all_forms:({commit:commit})=>new Promise((resolve,reject)=>{axios.get(burl+"onlineform/getall").then(response=>{console.log(response),200==response.data.code?setTimeout(()=>{commit("SET_FORMS",response.data),resolve(response.data),console.log(response.data)},1e3):reject(response.data)})}),save_form:({commit:commit},formData)=>new Promise((resolve,reject)=>{axios.post(burl+"onlineform/admin/savesmtp",formData).then(response=>{console.log(response),200==response.data.code?resolve(response.data):reject(response.data)})}),update_form:({commit:commit},formData)=>new Promise((resolve,reject)=>{axios.post(burl+"onlineform/admin/updatesmtp",formData).then(response=>{console.log(response),200==response.data.code?resolve(response.data):reject(response.data)})}),delete_forms:({commit:commit},formData)=>new Promise((resolve,reject)=>{axios.post(burl+"onlineform/admin/deletesmtp",formData).then(response=>{console.log(response),200==response.data.code?resolve(response.data):reject(response.data)})})},getters:{getforms:state=>state.forms_data,getIsExist:state=>frmdata=>(console.log(frmdata),state.forms_data.data.filter(frm=>frm.smtp_user==frmdata.smtp_user&&frm.smtp_server==frmdata.smtp_server)),getspecificSmtp:state=>id=>state.forms_data.data.find(frm=>frm.id==id)},mutations:{SET_FORMS(state,dd){state.forms_data=dd}}};export default onlineforms;